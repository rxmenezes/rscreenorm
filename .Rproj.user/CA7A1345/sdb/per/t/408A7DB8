{
    "collab_server" : "",
    "contents" : "myname <- \"Blijlevens Maxime\"\nmydrive <- \"/media/renee/Seagate Expansion Drive1/\"\nmydir.base1 <- paste(mydrive, \"Projects/\", sep=\"\")\nmydir.base <- paste(mydrive, \"Projects/HT screens Beusechem/\", sep=\"\")\nmydir <- paste(mydir.base,myname,sep=\"\")\nmydir.scripts <- paste(mydir,\"/scripts\",sep=\"\")\nmydir.data <- paste(mydir,\"/data\",sep=\"\")\nmydir.output <- paste(mydir,\"/outputTest\",sep=\"\")\n\nexperimentName <- \"Blijlevens\"\n#ann.file <- \"annotation_file.txt\"\n# This is run on R 3.3.1\n# This file is the same as main_analysis.R, only I here try to reproduce the results\n# obtained previously with the pre-processing\n# I then compare lethScores and normalized data with those obtained from the \n\nsetwd(mydir.scripts)\nsource(paste(mydir.base1,\"functions_wilcoxon_t_logistic_fdr.R\", sep=\"\"))\nsource(paste(mydir.base1,\"var_in_colour.R\", sep=\"\"))\nsource(paste(mydir.base1,\"mysplit.R\", sep=\"\"))\n\n#library(cellHTS2)\n#clines <- c(\"VU1131\",\"VU1131 FANCC\",\"VU1604\") # this may contain the different cell line names\n      # Since you have 8 cell lines, here you should have 8 names\n#source(\"read_data_all.R\") # read all data - 3 reps per cell line\n#save.image(\"data_read.RData\") \n\n#all.drugs <- levels(factor(ldata$sample.screen)) # here all.drugs is as in read_data_all.R\n#source(\"checks_reshape.R\")\n#source(\"check_nas.R\") # here objects data.vec and plate.vec are created\n#mydata <- data.vec\nsource(\"load_data_maxime2.R\") # modified from load_data_maxime.R because she already fixed screen, Screen variables\n\n#mydata <- ldata\n#myvar <- \"log2int\"\n#obs.screen <- all.drugs\n#data.proc <- \"raw log2\"\n#source(\"data_graphs.R\")\n#### Plot density: names of cell lines not correct in plot\n#### This was caused by selecting the replicates to plot using a factor from pdata\n#### which, when used to select columns of the data, was transformed into numeric\n#### I have now corrected this\n#source(\"data_density.R\")\n#source(\"checks_smallValues.R\") # These values were observed when we used wells in the 2nd column, but now they no longer are included\n#source(\"export_raw_data.R\")\n\n# Normalization to be done: per plate and separately per experiment (in this case, the cell line - or Sample in ldata),\n# make negative controls all have the same mean across cell lines, replicates and plates\nsource(\"data_norm3.R\") # New normalization computes std leth scores per plate\n# So this is for leth scores ONLY!\n#mydata <- ldata\n#data.proc <- \"log2 norm newData\"\n#myvar <- \"norm\"\n#source(\"data_graphs.R\")\n#source(\"data_graphs_perWellType.R\")\n#mydata <- ldata\n#source(\"data_density.R\")\n# Here some more checks  of the normalized data\n#source(\"checks_norm.R\")\n# MAXIME: In the script below, the siRNAs with controlStatus \"empty\" (as in the Plateconf file) are left out\n# Also: check which are the levels of ldata$controlStatus after leaving \"empty\" out, and consider only those controls of interest\n#source(\"graphs_norm.R\") # boxplots per well type - here left well type \"other\" out as all obs were NAs\n#save.image(\"data_preparations.RData\") # Note: rows K, L of Charlotte's screen 3 include\tDroplets of Cell Titer Blue at the edge of the wells, for all plates\n#source(\"input_graphs.R\") # Here define objects to be used in graphs\n#source(\"make_density_plots_1page.R\")\n### It looks like we below compute the leth scores again ####\n### I need to check if I would obtain different results if I leave the steps in the script below out\n#source(\"compute_stdLethScores_allWellTypes.R\") # pos cont is already UBB, so use this and not average of lethal siRNAs\n#source(\"make_lethScores_sameAsNormData.R\") # our normalization already yielded leth scores, so we just re-format the values here\n#source(\"compare_lethality_scores_plots_1page.R\") # get labels library lethal siRNAs - otherwise leave this out\n# Then: export data, compute lethality scores\nsource(\"export_norm_data_tests.R\")  ### CONTINUE FROM HERE!!\n#save.image(\"data_norm.RData\")\n\n#load(\"data_norm.RData\")\n## Check lethal siRNAs: change gamma for some cell lines\n\nmygamma <- 1 # previously we used gamma=1, yielding a cut-off \"halfway\" between the controls\n# mygamma > 1 yields a cut-off closer to positive controls, including more features in the invariant set\n#   -- it is better when the negative controls have a relatively small variance compared with positive controls and sample features\n# mygamma <- 1 yields a cut-off closer to the negative controls\n#   -- it is better when the negative controls have a relatively large variance compared with positive controls and sample features\nsource(\"classify_siRNAs_asLethal.R\")\n#source(\"density_plots_nonLethal_siRNAs.R\")\n#newname <- \"piecewiseLinear\" # PWL\nsource(\"get_normquant_piecewise_linear.R\") # creates data.qn, object with qn-norm data for sample siRNAs\n# the above script calls \"get_qn_norm.R\" and \"make_qn_norm_plots.R\"\nsource(\"make_density_plots_qn.R\") # here also export data\n# the above script calls \"plot_densities_allExpsSinglePage_qn.R\" and \"plot_densities_qn_onlySampleSiRNAs.R\"\ndim(data.qn) #  768  21\nsave(data.qn, file=paste(mydir.output, \"/data_qnorm_allWells.RData\", sep=\"\"))\ndata.qn.ann <- data.frame(norm.table[, 1:3], data.qn)\nsave(data.qn.ann, file=paste(mydir.output, \"/data_qnorm_allWells_withAnn.RData\", sep=\"\"))\n",
    "created" : 1510131898921.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4073506538",
    "id" : "408A7DB8",
    "lastKnownWriteTime" : 1509520973,
    "last_content_update" : 1509520973,
    "path" : "/media/renee/Seagate Expansion Drive1/Projects/HT screens Beusechem/Blijlevens Maxime/scripts/main_analysis_tests.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}